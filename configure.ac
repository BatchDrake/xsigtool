dnl File generated by Zed2Soft Project Manager for the Zed2Soft Science Environment
dnl Creation date: Wed Jan 11 20:35:22 2017

AC_PREREQ(2.65)

AC_INIT(xsigtool, 3432.1528022784)

AC_CONFIG_HEADERS(src/config.h)
AC_CONFIG_MACRO_DIR([m4])

AM_INIT_AUTOMAKE([1.11.1])

cflags_were_set=false
if test "${CFLAGS+set}" = set; then
  GLOBAL_CFLAGS=$CFLAGS
  CFLAGS=
  cflags_were_set=:
fi

AC_PROG_CC
AM_PROG_CC_C_O
AM_PROG_AS

AC_PROG_LIBTOOL
AC_PROG_INSTALL
dnl the following needs to come after the expansion of AC_PROG_CC
if $cflags_were_set; then :; else
  GLOBAL_CFLAGS=$CFLAGS
  CFLAGS=
fi

AC_SUBST(AM_CFLAGS)

AC_C_INLINE

if test "$ac_cv_c_inline" != no ; then
  AC_DEFINE([HAVE_INLINE], [0], [This compiler supports inline functions])
  AC_DEFINE(HAVE_INLINE,1)
  AC_SUBST(HAVE_INLINE)
fi

AC_HEADER_TIME

dnl Checks for library functions.
AC_FUNC_ERROR_AT_LINE
AC_FUNC_FORK
AC_FUNC_MALLOC

GLOBAL_LDFLAGS="-lm -lpthread -ldl -export-dynamic -rdynamic"


dnl Macro snippets imported from dependency `util'

dnl Macro snippets imported from dependency `sim-static'
SDL_VERSION=1.2.5
AM_PATH_SDL($SDL_VERSION,
            :,
            AC_MSG_ERROR([*** SDL version $SDL_VERSION not found!])
)

GLOBAL_CFLAGS="$SDL_CFLAGS $GLOBAL_CFLAGS"
GLOBAL_LDFLAGS="$SDL_LIBS $GLOBAL_LDFLAGS"
AC_SUBST(SDL_CFLAGS)
AC_SUBST(SDL_LIBS)


dnl Macro snippets imported from dependency `sigutils'
PKG_CHECK_MODULES(sigutils, [sigutils >= 0.1])
AC_SUBST(sigutils_CFLAGS)
AC_SUBST(sigutils_LIBS)

PKG_CHECK_MODULES(fftw3, [fftw3 >= 3.0])
AC_SUBST(fftw3_CFLAGS)
AC_SUBST(fftw3_LIBS)

PKG_CHECK_MODULES(sndfile, sndfile >= 1.0.2, ac_cv_sndfile=1, [AC_MSG_ERROR([Couldn't find libsndfile])])
AC_SUBST(sndfile_CFLAGS)
AC_SUBST(sndfile_LIBS)

PKG_CHECK_MODULES([asoundlib], [ alsa >= 1.0.25 ])
AC_SUBST(asoundlib_CFLAGS)
AC_SUBST(asoundlib_LIBS)

GLOBAL_LDFLAGS="$GLOBAL_LDFLAGS $sigutils_LIBS"
GLOBAL_CFLAGS="$GLOBAL_CFLAGS $sigutils_CFLAGS"
AC_SUBST(GLOBAL_CFLAGS)
AC_SUBST(GLOBAL_LDFLAGS)
AC_OUTPUT([
  Makefile
  src/Makefile
  util/Makefile
  sim-static/Makefile
])
